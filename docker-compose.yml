services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=docker-cluster
      - discovery.type=single-node        # 단일 노드 모드로 실행 (개발/테스트용)
      - bootstrap.memory_lock=true        # 메모리 스와핑 방지를 위한 설정
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"     # JVM 힙 메모리 최소/최대 1GB로 설정
      - xpack.security.enabled=false      # X-Pack 보안 기능 비활성화 (개발용)
      - xpack.security.transport.ssl.enabled=false  # SSL 전송 암호화 비활성화
    ulimits:
      memlock:  # 메모리 잠금 제한 설정 (성능 향상을 위해)
        soft: -1  # 소프트 제한 무제한
        hard: -1  # 하드 제한 무제한
    volumes:
      # Elasticsearch 데이터를 영구 볼륨에 저장
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"  # HTTP API 포트 (REST API 접근용)
      - "9300:9300"  # 노드 간 통신 포트 (클러스터 통신용)
    networks:
      - elk  # elk 네트워크에 연결
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Logstash 서비스 - 로그 수집, 변환, 전송 파이프라인
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0  # Logstash 8.11.0 이미지 사용
    container_name: logstash  # 컨테이너 이름 지정
    environment:
      - "LS_JAVA_OPTS=-Xmx512m -Xms512m"  # Logstash JVM 메모리 설정 (512MB)
    volumes:
      # Logstash 설정 파일들을 컨테이너에 마운트 (읽기 전용)
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro  # 파이프라인 설정 파일들
    ports:
      - "5044:5044"    # Beats 입력 포트 (Filebeat, Metricbeat 등)
      - "5050:5050/tcp"  # TCP 로그 입력 포트
      - "5050:5050/udp"  # UDP 로그 입력 포트
      - "9600:9600"    # Logstash API 포트 (모니터링용)
    networks:
      - elk  # elk 네트워크에 연결
    depends_on:
      - elasticsearch  # Elasticsearch가 먼저 시작된 후 Logstash 시작
    # 헬스체크 추가
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9600" ]
      interval: 30s
      timeout: 10s
      retries: 5
    # Elasticsearch가 완전히 준비될 때까지 대기
    restart: unless-stopped

  # Kibana 서비스 - 데이터 시각화 및 대시보드 웹 인터페이스
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0  # Kibana 8.11.0 이미지 사용
    container_name: kibana  # 컨테이너 이름 지정
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200  # Elasticsearch 연결 주소
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  # Filebeat - 시스템 로그 수집
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro # Filebeat 설정파일
      - ./logs:/usr/share/filebeat/logs:ro # Spring Boot 로그 파일 (애플리케이션과 공유)
    depends_on:
      - elasticsearch
      - logstash
    networks:
      - elk


volumes:
  elasticsearch_data: # docker 볼륨 이름
    driver: local # docker가 기본 방식으로 로컬 디스크에 데이터를 저장
networks:
  elk: # ELK가 서로 네트워크 상에서 통신할 수 있게 도와줌
    driver: bridge # 기본 브리지 네트워크 방식 사용